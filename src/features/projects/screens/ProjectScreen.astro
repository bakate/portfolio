---
import { Image } from "astro:assets";
import type { TranslatedProject } from "../service";
import { type ui, type LanguageCode, defaultLanguage } from "@/i18n/ui";
import { buttonVariants } from '@/components/ui/button';
import { Code, ExternalLink } from "lucide-react";
import { Badge } from "@/components/ui/badge";

export type Props = {
  project: TranslatedProject;
  t: typeof ui[LanguageCode];
  lang: LanguageCode;
};

const { project, t, lang } = Astro.props;
---

<div class="container mx-auto px-4 py-8">
  <article class="prose lg:prose-xl max-w-none">
    <a href={`${lang !== defaultLanguage ? `/${lang}` : ""}/projects`} 
    class={buttonVariants({ variant: 'ghost' }) + ' mb-6 no-underline'}>
      &larr; {t.projectDetailPage?.backToProjects ?? "Back to Projects"}
    </a>

    <h1>{project.title}</h1>
    <div class="mb-4 flex flex-wrap items-center gap-x-4 gap-y-2 text-sm text-gray-600 dark:text-gray-400">
      <!-- Category -->
      {project.categoryText && (
        <div class="flex items-center gap-2">
        <span class="text-foreground">
          {t.projectDetailPage?.categoryLabel ?? "Category"}
        </span>
          <Badge variant="secondary">{project.categoryText}</Badge>
        </div>
      )}
      <!-- Date -->
      {project.dateText && (
        <div class="flex items-center gap-2">
        <span class="text-foreground">
          {t.projectDetailPage?.dateLabel ?? "Date"}
        </span>
          <Badge variant="secondary">{project.dateText}</Badge>
        </div>
      )}
    </div>

    <!-- Image -->
    {project.imageUrl && (
      <div class="mb-8 aspect-[16/9] overflow-hidden rounded-lg shadow-lg">
        <Image
          src={project.imageUrl}
          alt={project.imageAltText}
          class="h-full w-full object-cover transition-transform duration-300 ease-in-out hover:scale-105"
          widths={[400, 800, 1200]}
          sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
        />
      </div>
    )}

    <!-- Detailed Description -->
    {project.detailedDescription && (
      <section class="mb-8">
        <h2>{t.projectDetailPage?.aboutTitle ?? "About this project"}</h2>
        <p>{project.detailedDescription}</p>
      </section>
    )}

      {project.keyFeaturesTranslated && project.keyFeaturesTranslated.length > 0 && (
      <section class="mb-8">
        <h2>{t.projectDetailPage?.keyFeaturesTitle ?? "Key Features"}</h2>
        <ul class="list-disc pl-5">
          {project.keyFeaturesTranslated.map((feature) => (
            <li>
              <strong>{feature.title}:</strong> {feature.description}
            </li>
          ))}
        </ul>
      </section>
    )}

    {/* Gallery */}
    {project.galleryImagesTranslated && project.galleryImagesTranslated.length > 0 && (
      <section class="mb-8">
        <h2>{t.projectDetailPage?.galleryTitle ?? "Gallery"}</h2>
        <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3">
          {project.galleryImagesTranslated.map((image) => (
            <div class="overflow-hidden rounded-lg shadow-md">
              <Image
                src={image.src}
                alt={image.alt}
                class="h-full w-full object-cover transition-transform duration-300 ease-in-out hover:scale-105"
                widths={[200, 400]}
                sizes="(max-width: 640px) 100vw, (max-width: 768px) 50vw, 33vw"
              />
              {image.caption && <p class="mt-2 p-2 text-center text-sm">{image.caption}</p>}
            </div>
          ))}
        </div>
      </section>
    )}

      {(project.challenges || project.learnings) && (
      <div class="grid grid-cols-1 gap-8 md:grid-cols-2">
        {project.challenges && (
          <section class="mb-8">
              <h2>
                {t.projectDetailPage?.challengesTitle ?? "Challenges"}
              </h2>  
              <p>
                {project.challenges ?? "Challenges"}
              </p>            
          </section>
        )}

        {project.learnings && (
          <section class="mb-8">
            <h2>
              {t.projectDetailPage?.learningsTitle ?? "Learnings"}
            </h2>  
            <p>
              {project.learnings ?? "Learnings"}
            </p>     
          </section>
        )}
      </div>
    )}

    {/* Project and Code URLs */}
    <div class="mt-8 flex flex-wrap gap-4">
      {project.projectUrl && (
        <a href={project.projectUrl} target="_blank" rel="noopener noreferrer" class={buttonVariants({ variant: 'default' }) + ' flex-1 no-underline'}>
            <ExternalLink className="mr-2 size-4" />
          {t.projectDetailPage?.visitProjectButton ?? "Visit Project"}
        </a>
      )}
      {project.codeUrl && (
        <a href={project.codeUrl} target="_blank" rel="noopener noreferrer" class={buttonVariants({ variant: 'secondary' }) + ' flex-1 no-underline'}>
             <Code className="mr-2 size-4" />   
          {t.projectDetailPage?.viewCodeButton ?? "View Code"}
        </a>
      )}
    </div>
  </article>
</div>
