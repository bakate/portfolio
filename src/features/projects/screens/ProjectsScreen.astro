---
import type { TranslatedProject } from '@/features/projects/service';
import type { LanguageCode, ui } from '@/i18n/ui';
import SectionCard from '@/components/section-card.astro'; 
import { EmptyState } from '@/components/empty-state';

export type Props = {
  projects: Array<TranslatedProject>;
  t: (typeof ui)[LanguageCode]; 
  lang: LanguageCode;
};

const { projects, t, lang } = Astro.props;
const projectsPageTranslations = t.projectsPage; // For easier access
---

<div class="container mx-auto px-4 py-8">
  <h1 class="mb-8 text-center text-4xl font-bold">
    {projectsPageTranslations?.title ?? 'Projects'}
  </h1>
  {projects && projects.length > 0 ? (
    <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
      {projects.map((project: TranslatedProject) => {
        const projectUrl = `${lang === 'fr' ? '' : '/' + lang}/projects/${project.slug}`;
        return (
          <a
            href={projectUrl}
            aria-label={`View project ${project.title}`}
            class="flex rounded-lg transition-shadow duration-200 hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2"
          >
            <SectionCard
              title={project.title}
              categoryText={project.categoryText}
              className="w-full"
              classNameTitle="text-xl"
              tags={project.tags ?? []}
              imageUrl={project.imageUrl}
              imageAltText={project.imageAltText}
            >
              <p class="text-sm text-muted-foreground">
                {project.description}
              </p>
            </SectionCard>
          </a>
        );
      })}
    </div>
  ) : (
    <EmptyState
      title={projectsPageTranslations?.noProjects}
      description={projectsPageTranslations?.noProjectsDescription}
    />
  )}
</div>
