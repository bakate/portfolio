--- 
// src/features/blog/screens/BlogPostDetailScreen.astro
import BaseLayout from '@/layouts/BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';
import type { LanguageCode } from '@/i18n/ui';
import { ArrowLeft, Clock } from 'lucide-react';
import { getRelativeLocaleUrl } from 'astro:i18n';
import { useTranslations } from '@/i18n/ui';
import { Image } from 'astro:assets';
import { Button, buttonVariants } from '@/components/ui/button';
import Heading from '@/components/Heading.astro';
import { formatDate } from '@/lib/utils';

type Props = {
  post: CollectionEntry<'blog'>["data"];
  lang: LanguageCode;
};

const { post, lang } = Astro.props;

const pubDate = new Date(post.pubDate);
const updatedDate = post.updatedDate ? new Date(post.updatedDate) : null;

const t = useTranslations(lang, 'blogPost');

const pageTitle = post.title;
const pageDescription = post.description;
---
<BaseLayout {pageTitle} {pageDescription}>
  <article class="container mx-auto px-4 py-8 md:py-12 max-w-3xl">

      <a href={getRelativeLocaleUrl(lang, '/blog')}  class={buttonVariants({ variant: 'ghost' }) + ' mb-6 no-underline'}>
        <ArrowLeft className="mr-2 size-4" />
        {t('backToList')}
      </a>
    
    <header class="mb-8">
      <Heading
        title={post.title}
        titleClassName="md:text-5xl"
      />
      <div class="mt-3 flex items-center justify-between text-sm text-muted-foreground">
        <p class="flex items-center gap-1">
        <b>{t('publishedOn')}</b>
        <span>{formatDate(pubDate, lang)}</span>
      </p>
      <p class="flex items-center gap-1"> 
        {updatedDate ? 
        <span class="font-medium">{t('updatedOn')}</span>
        <span>{formatDate(updatedDate, lang)}</span> : null}
      </p>



      <p class="flex items-center">
        <Clock className="mr-1.5 size-4 flex-shrink-0" />
        <span>{post.readingTimeMinutes} {t('readingTimeSuffix')}</span>
      </p>
      </div>
  
      {post.heroImage && (
        <Image
          src={post.heroImage.url} 
          alt={post.heroImage.alt} 
          class="w-full h-auto object-cover rounded-lg my-6 shadow-lg"
          width={768}
          height={432} />
      )}
       {post.tags && post.tags.length > 0 && (
        <div class="mt-4 flex flex-wrap gap-2">
          {post.tags.map((tag: string) => (
            <span class="px-3 py-1 text-xs font-medium bg-secondary text-secondary-foreground rounded-full transition-colors hover:bg-primary hover:text-primary-foreground">
              {tag}
            </span>
          ))}
        </div>
      )}
    </header>

    <div class="prose prose-lg dark:prose-invert max-w-none mx-auto">
      <slot />
    </div>

  <!-- We will add here the other related and recommended posts -->
  </article>
</BaseLayout>
