--- 
// src/features/blog/screens/BlogPostDetailScreen.astro
import BaseLayout from '@/layouts/BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';
import type { LanguageCode } from '@/i18n/ui';
import { ArrowLeft } from 'lucide-react';
import { getRelativeLocaleUrl } from 'astro:i18n';
import { useTranslations } from '@/i18n/ui';

type Props = {
  post: CollectionEntry<'blog'>["data"];
  lang: LanguageCode;
};

const { post, lang } = Astro.props;

const pubDate = new Date(post.pubDate);
const updatedDate = post.updatedDate ? new Date(post.updatedDate) : null;

const t = useTranslations(lang, 'blogPost');

const pageTitle = post.title;
const pageDescription = post.description;
---
<BaseLayout {pageTitle} {pageDescription}>
  <article class="container mx-auto px-4 py-8 md:py-12 max-w-3xl">
    <header class="mb-8">
      <h1 class="text-3xl md:text-4xl font-bold tracking-tight mb-2">{post.title}</h1>
      <p class="text-sm text-muted-foreground">
        {t('publishedOn') + pubDate.toLocaleDateString(lang, { year: 'numeric', month: 'long', day: 'numeric' })}
        {updatedDate && (
          <span class="italic">
            {' (' + t('updatedOn') + updatedDate.toLocaleDateString(lang, { year: 'numeric', month: 'long', day: 'numeric' }) + ')'}
          </span>
        )}
      </p>
      {post.heroImage && (
        <img 
          src={post.heroImage} 
          alt={t('heroImageAlt') + post.title} 
          class="w-full h-auto object-cover rounded-lg my-6 shadow-lg"
          width="768"
          height="432" />
      )}
       {post.tags && post.tags.length > 0 && (
        <div class="mt-4 flex flex-wrap gap-2">
          {post.tags.map((tag: string) => (
            <span class="px-3 py-1 text-xs font-medium bg-secondary text-secondary-foreground rounded-full">
              {tag}
            </span>
          ))}
        </div>
      )}
    </header>

    <div class="prose prose-lg dark:prose-invert max-w-none mx-auto">
      <slot />
    </div>

    <footer class="mt-12 pt-8 border-t border-border">
      <a href={getRelativeLocaleUrl(lang, '/blog')} class="inline-flex items-center text-primary hover:underline">
        <ArrowLeft className="mr-2 h-4 w-4" />
        {t('backToList')}
      </a>
    </footer>
  </article>
</BaseLayout>
