---
import { defaultLanguage, useTranslations, type LanguageCode } from '@/i18n/ui';
import {LanguageSelector} from './LanguageSelector.tsx'; 
import { getRelativeLocaleUrl } from 'astro:i18n';
import ThemeToggle from './ThemeToggle.astro';
import { languages } from '@/i18n/ui';
import Logo from './Logo.astro';
import { buttonVariants } from './ui/button';
const currentLocale = Astro.currentLocale as LanguageCode | undefined ?? defaultLanguage;


const currentPathname = Astro.url.pathname;

const t = useTranslations(currentLocale, 'nav');
const tSite = useTranslations(currentLocale, 'site');

type NavLink = {
  href: string;
  textKey: 'blog' | 'contact' | 'home' | 'projects';
  
};

const navLinks: NavLink[] = [
  { href: '/projects', textKey: 'projects' },
  { href: '/blog', textKey: 'blog' },
  { href: '/contact', textKey: 'contact' },
  ];

  let basePathForLinks = currentPathname;
  if(currentLocale !== defaultLanguage){
    const prefix = `/${currentLocale}`;
    if(currentPathname.startsWith(prefix)){
      basePathForLinks = currentPathname.substring(prefix.length);
      if(basePathForLinks === ''){
        basePathForLinks = '/';
      }
    }
  }

  const languagesForSelector   = Object.keys(languages).map((langCode) => ({
    code: langCode,
    name: languages[langCode as LanguageCode].name,
    flag: languages[langCode as LanguageCode].flag,
    targetUrl: getRelativeLocaleUrl(langCode, basePathForLinks),
  }));

---

<header class="py-6 border-b sticky top-0 z-50 w-full bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
    <nav class="mx-auto px-4 max-w-screen-2xl flex justify-between items-center">
     <Logo />
      <div class="flex items-center gap-x-4">
        {navLinks.map((link) => (
          <a
            href={getRelativeLocaleUrl(currentLocale, link.href)}
            class={buttonVariants({ variant: 'ghost' }) + ' hover:underline'}
          >
            {t(link.textKey)}
          </a>
        ))}
        </div>
        <div class="flex items-center gap-x-3">
          <LanguageSelector currentLocale={currentLocale} languages={languagesForSelector}  client:load />
          <ThemeToggle />
        </div>
      
    </nav>
  </header>